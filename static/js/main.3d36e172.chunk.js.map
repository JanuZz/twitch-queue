{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","people","setPeople","connected","setConnected","color","useParams","console","log","useEffect","socket","io","on","id","list","removeAllListeners","className","style","backgroundColor","length","toFixed","map","person","i","mod","username","ign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","component","document","getElementById"],"mappings":"0NA6EeA,MAxEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAILC,EAAUC,cAAVD,MAoBR,OAnBAE,QAAQC,IAAI,UAAaH,GAEzBI,qBAAU,WACRF,QAAQC,IAAI,2BACZ,IAAME,EAASC,aAAG,8CAUlB,OATAD,EAAOE,GAAG,WAAW,WACnBL,QAAQC,IAAI,gBAAkBE,EAAOG,IACrCT,GAAa,MAEfM,EAAOE,GAAG,SAAS,SAACE,GAClBZ,EAAUY,GACVP,QAAQC,IAAIM,MAGP,WACLJ,EAAOK,mBAAmB,YAE3B,IAGD,qCACE,sBACEC,UAAU,2CACVC,MAAO,CACLC,gBAAiBb,EAAQ,IAAMA,EAAQ,WAH3C,UAME,mBAAGW,UAAU,mCAAb,SACGb,EAAY,QAAU,kBAEzB,oBAAGa,UAAU,qDAAb,oBACUf,EAAOkB,OAAOC,QAAQ,SAGlC,qBAAKJ,UAAU,8DAAf,SACGf,EAAOoB,KAAI,SAACC,EAAQC,GACnB,OACE,sBAAKP,UAAU,qCAAf,UACGM,EAAOE,IACN,sBACER,UAAU,eACVC,MAAO,CAAEC,gBAAiB,WAF5B,iBAOA,6BAEF,mBACEF,UAAU,wCACVC,MAAO,CACLZ,MAAOiB,EAAOjB,MAAQiB,EAAOjB,MAAQ,WAHzC,SAME,4BAAIiB,EAAOG,aAEb,mBAAGT,UAAU,0DAAb,SACGM,EAAOI,kBCvDTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWzC,IACjC,cAAC,IAAD,CAAOyC,UAAWzC,WAIxB0C,SAASC,eAAe,SAG1Bf,M","file":"static/js/main.3d36e172.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { io } from \"socket.io-client\";\nimport \"./App.css\";\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [connected, setConnected] = useState(false);\n\n  const { color } = useParams()\n  console.log(\"Color: \" + (color))\n\n  useEffect(() => {\n    console.log(\"Connecting to server...\");\n    const socket = io(\"https://shadow-generated-jodhpur.glitch.me\");\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to \" + socket.id);\n      setConnected(true);\n    });\n    socket.on(\"queue\", (list) => {\n      setPeople(list);\n      console.log(list);\n    });\n\n    return () => {\n      socket.removeAllListeners(\"queue\");\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"rounded p-2 fw-bolder lh-base shadow m-2\"\n        style={{\n          backgroundColor: color ? \"#\" + color : \"#fb00ff\",\n        }}\n      >\n        <p className=\"text-center fs-3 text-white mb-0\">\n          {connected ? \"Queue\" : \"Connecting...\"}\n        </p>\n        <p className=\"text-center fs-6 text-muted font-weight-light mb-0\">\n          Total: {people.length.toFixed(0)}\n        </p>\n      </div>\n      <div className=\"d-flex flex-column justify-content-start align-items-center\">\n        {people.map((person, i) => {\n          return (\n            <div className=\"d-flex flex-row align-items-center\">\n              {person.mod ? (\n                <span\n                  className=\"badge shadow\"\n                  style={{ backgroundColor: \"#ff0000\" }}\n                >\n                  MOD\n                </span>\n              ) : (\n                <></>\n              )}\n              <p\n                className=\"fs-2 font-weight-bold px-3 textShadow\"\n                style={{\n                  color: person.color ? person.color : \"#ffffff\",\n                }}\n              >\n                <b>{person.username}</b>\n              </p>\n              <p className=\"text-center ont-weight-light text-white fs-3 textShadow\">\n                {person.ign}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/:color\" component={App} />\n        <Route component={App} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}